#!/bin/bash
str_filt="wfile=gtk_file_chooser_dialog_new(_(\"Select Image File\"), GTK_WINDOW(window), GTK_FILE_CHOOSER_ACTION_SAVE, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, GTK_STOCK_SAVE, GTK_RESPONSE_ACCEPT, NULL);
g_signal_connect(G_OBJECT(wfile), \"destroy\", G_CALLBACK(gtk_widget_destroy), G_OBJECT(wfile));
gtk_file_chooser_set_current_folder(GTK_FILE_CHOOSER(wfile), folr);
gtk_file_chooser_set_show_hidden(GTK_FILE_CHOOSER(wfile), FALSE);
gtk_file_chooser_set_do_overwrite_confirmation(GTK_FILE_CHOOSER(wfile), TRUE);
pngfilt=gtk_file_filter_new();
gtk_file_filter_set_name(pngfilt, \"Portable Network Graphics (PNG)\");
gtk_file_filter_add_mime_type(pngfilt, \"image/png\");
gtk_file_filter_add_mime_type(pngfilt, \"application/png\");
gtk_file_filter_add_mime_type(pngfilt, \"application/x-png\");
gtk_file_chooser_add_filter(GTK_FILE_CHOOSER(wfile), pngfilt);
epsfilt=gtk_file_filter_new();
gtk_file_filter_set_name(epsfilt, \"Encapsulated Postscript (EPS)\");
gtk_file_filter_add_mime_type(epsfilt, \"application/postscript\");
gtk_file_filter_add_mime_type(epsfilt, \"application/eps\");
gtk_file_filter_add_mime_type(epsfilt, \"image/eps\");
gtk_file_filter_add_mime_type(epsfilt, \"image/x-eps\");
gtk_file_chooser_add_filter(GTK_FILE_CHOOSER(wfile), epsfilt);
svgfilt=gtk_file_filter_new();
gtk_file_filter_set_name(svgfilt, \"Scalable Vector Graphics (SVG)\");
gtk_file_filter_add_mime_type(svgfilt, \"image/svg+xml\");
gtk_file_chooser_add_filter(GTK_FILE_CHOOSER(wfile), svgfilt);"

str_pl2="if (gtk_dialog_run(GTK_DIALOG(wfile))==GTK_RESPONSE_ACCEPT)
{
	g_free(folr);
	folr=gtk_file_chooser_get_current_folder(GTK_FILE_CHOOSER(wfile));
	fout=gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(wfile));
	filt=gtk_file_chooser_get_filter(GTK_FILE_CHOOSER(wfile));
	if (filt==epsfilt)
	{
		if (g_str_has_suffix(fout, \".eps\")) gtk_plot_linear_print_eps(plot2, fout);
		else
		{
			fout2=g_strconcat(fout, \".eps\", NULL);
			gtk_plot_linear_print_eps(plot2, fout2);
			g_free(fout2);
		}
	}
	else if (filt==svgfilt)
	{
		if (g_str_has_suffix(fout, \".svg\")) gtk_plot_linear_print_svg(plot2, fout);
		else
		{
			fout2=g_strconcat(fout, \".svg\", NULL);
			gtk_plot_linear_print_svg(plot2, fout2);
			g_free(fout2);
		}
	}
	else if (g_str_has_suffix(fout, \".png\")) gtk_plot_linear_print_png(plot2, fout);
	else
	{
		fout2=g_strconcat(fout, \".png\", NULL);
		gtk_plot_linear_print_png(plot2, fout2);
		g_free(fout2);
	}
	g_free(fout);
}
gtk_widget_destroy(wfile);"

str_pl1="if (gtk_dialog_run(GTK_DIALOG(wfile))==GTK_RESPONSE_ACCEPT)
{
	g_free(folr);
	folr=gtk_file_chooser_get_current_folder(GTK_FILE_CHOOSER(wfile));
	fout=gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(wfile));
	filt=gtk_file_chooser_get_filter(GTK_FILE_CHOOSER(wfile));
	if (filt==epsfilt)
	{
		if (g_str_has_suffix(fout, \".eps\")) gtk_plot_linear_print_eps(plot1, fout);
		else
		{
			fout2=g_strconcat(fout, \".eps\", NULL);
			gtk_plot_linear_print_eps(plot1, fout2);
			g_free(fout2);
		}
	}
	else if (filt==svgfilt)
	{
		if (g_str_has_suffix(fout, \".svg\")) gtk_plot_linear_print_svg(plot1, fout);
		else
		{
			fout2=g_strconcat(fout, \".svg\", NULL);
			gtk_plot_linear_print_svg(plot1, fout2);
			g_free(fout2);
		}
	}
	else if (g_str_has_suffix(fout, \".png\")) gtk_plot_linear_print_png(plot1, fout);
	else
	{
		fout2=g_strconcat(fout, \".png\", NULL);
		gtk_plot_linear_print_png(plot1, fout2);
		g_free(fout2);
	}
	g_free(fout);
}
gtk_widget_destroy(wfile);"

str_ierr="str=g_strdup(_(\"No available image.\"));
gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);
g_free(str);"

str_sch="wfile=gtk_file_chooser_dialog_new(_(\"Select Data File\"), GTK_WINDOW(window), GTK_FILE_CHOOSER_ACTION_SAVE, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, GTK_STOCK_SAVE, GTK_RESPONSE_ACCEPT, NULL);
g_signal_connect(G_OBJECT(wfile), \"destroy\", G_CALLBACK(gtk_widget_destroy), G_OBJECT(wfile));
gtk_file_chooser_set_current_folder(GTK_FILE_CHOOSER(wfile), folr);
gtk_file_chooser_set_do_overwrite_confirmation(GTK_FILE_CHOOSER(wfile), TRUE);
if (gtk_dialog_run(GTK_DIALOG(wfile))==GTK_RESPONSE_ACCEPT)
{
	g_free(folr);
	folr=gtk_file_chooser_get_current_folder(GTK_FILE_CHOOSER(wfile));
	fout=gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(wfile));"

str_dupt="str2=g_strdup(contents);
for (j=1; j<st4; j++)
	{
	str=g_strjoin(\"\\t\", contents, str2, NULL);
	g_free(contents);
	contents=g_strdup(str);
	g_free(str);
}
g_free(str2);"

str_dupj="str2=g_strdup(contents);
for (j=1; j<jdimx; j++)
	{
	str=g_strjoin(\"\\t\", contents, str2, NULL);
	g_free(contents);
	contents=g_strdup(str);
	g_free(str);
}
g_free(str2);"

str_dupk="str2=g_strdup(contents);
for (j=1; j<kdimxf; j++)
	{
	str=g_strjoin(\"\\t\", contents, str2, NULL);
	g_free(contents);
	contents=g_strdup(str);
	g_free(str);
}
g_free(str2);"

str_dup2="pt=GTK_PLOT(plot2);
plt=GTK_PLOT_LINEAR(plot2);
sz4=g_array_index((pt->sizes), gint, 0);
jdimx=(plt->xdata->len)/(2*sz4);
contents=g_strdup(str2);
for (k=1; k<jdimx; k++)
{
	str=g_strjoin(\"\\t\", contents, str2, NULL);
	g_free(contents);
	contents=g_strdup(str);
	g_free(str);
}
g_free(str2);
g_snprintf(s1, 10, \"%f\", g_array_index(plt->ydata, gdouble, 0));
str2=g_strjoin(\"\\t\", \"0.0000000\", s1, \"0.0000000\", NULL);
for (k=1; k<jdimx; k++)
{
	g_snprintf(s1, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*k*sz4));
	str=g_strjoin(\"\\t\", str2, \"0.0000000\", s1, \"0.0000000\", NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l4="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, j));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, j));
g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, j+sz4));
g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, j+(2*sz4)));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p4="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, j));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j));
g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+sz4));
g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+(2*sz4)));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l4a="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k*st4));
g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (k+sz4)*st4));
g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, (k+2*sz4)*st4));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, j+(k*st4)));
	g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, j+((k+sz4)*st4)));
	g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, (j++)+((k+(2*sz4))*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p4a="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k*st4));
g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (k+sz4)*st4));
g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (k+2*sz4)*st4));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+(k*st4)));
	g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+((k+sz4)*st4)));
	g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (j++)+((k+(2*sz4))*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l3="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, j));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j));
g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+sz4));
str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p3="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, j));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j));
g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+sz4));
str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l3a="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k*st4));
g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (k+sz4)*st4));
str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, j+(k*st4)));
	g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (j++)+((k+sz4)*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p3a="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k*st4));
g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (k+sz4)*st4));
str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j+(k*st4)));
	g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (j++)+((k+sz4)*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l2="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, j));
g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, j));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p2="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, j));
g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, j));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l2a="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k*st4));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, (j++)+(k*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p2a="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, k*st4));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k*st4));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
j=1;
while (j<st4)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (j++)+(k*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l2k="g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, (dim*kdimxf)+(j*st4)));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+(j*st4)));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
k=1;
while (k<kdimxf)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k+(dim*kdimxf)+(j*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p2k="g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, (dim*kdimxf)+(j*st4)));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+(j*st4)));
str2=g_strjoin(\"\\t\", s1, s2, NULL);
k=1;
while (k<kdimxf)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k+(dim*kdimxf)+(j*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_l2j="g_snprintf(s2, 10, \"%f\", g_array_index(plt->xdata, gdouble, dim+(k*st4)));
g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(k*st4)));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
k=1;
while (j<jdimx)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(j*kdimxf)+(k*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_p2j="g_snprintf(s2, 10, \"%f\", g_array_index(plt2->thdata, gdouble, dim+(k*st4)));
g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(k*st4)));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
k=1;
while (j<jdimx)
{
	g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(j*kdimxf)+(k*st4)));
	str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);
	g_free(str2);
	str2=g_strdup(str);
	g_free(str);
}
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_pc1="g_snprintf(s1, 10, \"%d\", k);
g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, k));
g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, k));
g_snprintf(s4, 10, \"%f\", g_array_index(chp, gdouble, k));
str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_pn1="g_snprintf(s1, 10, \"%d\", k);
g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, k));
g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, k));
str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);
str=g_strdup(contents);
g_free(contents);
contents=g_strjoin(DLMT, str, str2, NULL);
{g_free(str); g_free(str2);}"

str_sav="g_file_set_contents(fout, contents, -1, &Err);
g_free(contents);
if (Err)
{
	str=g_strdup_printf(_(\"Error Saving file: %s.\"), (Err->message));
	gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);
	{g_free(str); g_error_free(Err);}
}"

str_derr="str=g_strdup(_(\"No available processed data.\"));
gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);
g_free(str);"

{
echo "/***************************************************************************"
echo " *            data.c"
echo " *"
echo " *  Sat Dec  4 17:18:14 2010"
echo " *  Copyright  2010  Paul Childs"
echo " *  <pchilds@physics.org>"
echo " ****************************************************************************/"
echo ""
echo "/*"
echo " * This program is free software; you can redistribute it and/or modify"
echo " * it under the terms of the GNU General Public License as published by"
echo " * the Free Software Foundation; either version 2 of the License, or"
echo " * (at your option) any later version."
echo " *"
echo " * This program is distributed in the hope that it will be useful,"
echo " * but WITHOUT ANY WARRANTY; without even the implied warranty of"
echo " * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
echo " * GNU Library General Public License for more details."
echo " *"
echo " * You should have received a copy of the GNU General Public License"
echo " * along with this program; if not, write to the Free Software"
echo " * Foundation, Inc., 51 Franklin Street, Fifth Floor Boston, MA 02110-1301,  USA"
echo " */"
echo ""
echo "#include \"data.h\""
echo ""
echo "GtkPrintSettings *prst=NULL;"
echo ""
echo "void prb(GtkPrintOperation *prto, GtkPrintContext *ctex, int page_nr) {gtk_print_operation_set_current_page(prto, 0); gtk_print_operation_set_has_selection(prto, FALSE);}"
echo ""
echo "void prt(GtkWidget *widget, gpointer data)"
echo "{"
echo "	gchar *str;"
echo "	GError *Err=NULL;"
echo "	GtkPageSetup *prps=NULL;"
echo "	GtkPrintOperation *prto;"
echo "	GtkPrintOperationResult res;"
echo ""
echo "	if ((flags&PROC_OPN)==0)"
echo "	{"
echo "		gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "		str=g_strdup(_(\"No available image.\"));"
echo "		gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "		g_free(str);"
echo "	}"
echo "	else"
echo "	{"
echo "		prto=gtk_print_operation_new();"
echo "		if (prst!=NULL) gtk_print_operation_set_print_settings(prto, prst);"
echo "		prps=gtk_print_operation_get_default_page_setup(prto);"
echo "		if (prps==NULL) prps=gtk_page_setup_new();"
echo "		gtk_page_setup_set_orientation(prps, GTK_PAGE_ORIENTATION_LANDSCAPE);"
echo "		gtk_print_operation_set_default_page_setup(prto, prps);"
echo "		g_signal_connect(prto, \"begin_print\", G_CALLBACK(prb), NULL);"
echo "		switch (gtk_notebook_get_current_page(GTK_NOTEBOOK(notebook2)))"
echo "		{"
echo "			case 2:"
echo "			if ((flags&(PROC_BAT|PROC_PRS))==(PROC_BAT|PROC_PRS))"
echo "			{"
echo "				if ((flags&PROC_POL)!=0) g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_polar_print), (gpointer) plot3);"
echo "				else g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot3);"
echo "			}"
echo "			else if ((flags&PROC_TRS)!=0) g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot2);"
echo "			else g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot1);"
echo "			break;"
echo "			case 1:"
echo "			if ((flags&PROC_TRS)!=0) g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot2);"
echo "			else g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot1);"
echo "			break;"
echo "			default:"
echo "			g_signal_connect(prto, \"draw_page\", G_CALLBACK(gtk_plot_linear_print), (gpointer) plot1);"
echo "			break;"
echo "		}"
echo "		res=gtk_print_operation_run(prto, GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG, GTK_WINDOW(data), &Err);"
echo "		if (res==GTK_PRINT_OPERATION_RESULT_ERROR)"
echo "		{"
echo "			str=g_strdup_printf(_(\"An error occured while printing: %s.\"), (Err->message));"
echo "			gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "			g_free(str);"
echo "			g_error_free(Err);"
echo "		}"
echo "		else if (res==GTK_PRINT_OPERATION_RESULT_APPLY)"
echo "		{"
echo "			if (prst!=NULL) g_object_unref(prst);"
echo "			prst=g_object_ref(gtk_print_operation_get_print_settings(prto));"
echo "		}"
echo "		g_object_unref(prto);"
echo "	}"
echo "}"
echo ""
echo "void prg(GtkWidget *widget, gpointer data)"
echo "{"
echo "	GtkWidget *wfile;"
echo "	GtkFileFilter *epsfilt, *pngfilt, *svgfilt, *filt;"
echo "	gchar *str, *fout=NULL, *fout2=NULL;"
echo ""
echo "	switch (gtk_notebook_get_current_page(GTK_NOTEBOOK(notebook2)))"
echo "	{"
echo "		case 2:"
echo "		if ((flags&(PROC_BAT|PROC_PRS))==(PROC_BAT|PROC_PRS))"
echo "		{"
echo "${str_filt}"
echo "			if (gtk_dialog_run(GTK_DIALOG(wfile))==GTK_RESPONSE_ACCEPT)"
echo "			{"
echo "				g_free(folr);"
echo "				folr=gtk_file_chooser_get_current_folder(GTK_FILE_CHOOSER(wfile));"
echo "				fout=gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(wfile));"
echo "				filt=gtk_file_chooser_get_filter(GTK_FILE_CHOOSER(wfile));"
echo "				if (filt==epsfilt)"
echo "				{"
echo "					if (g_str_has_suffix(fout, \".eps\"))"
echo "					{"
echo "						if ((flags&PROC_POL)!=0) gtk_plot_polar_print_eps(plot3, fout);"
echo "						else gtk_plot_linear_print_eps(plot3, fout);"
echo "					}"
echo "					else"
echo "					{"
echo "						fout2=g_strconcat(fout, \".eps\", NULL);"
echo "						if ((flags&PROC_POL)!=0) gtk_plot_polar_print_eps(plot3, fout2);"
echo "						else gtk_plot_linear_print_eps(plot3, fout2);"
echo "						g_free(fout2);"
echo "					}"
echo "				}"
echo "				else if (filt==svgfilt)"
echo "				{"
echo "					if (g_str_has_suffix(fout, \".svg\"))"
echo "					{"
echo "						if ((flags&PROC_POL)!=0) gtk_plot_polar_print_svg(plot3, fout);"
echo "						else gtk_plot_linear_print_svg(plot3, fout);"
echo "					}"
echo "					else"
echo "					{"
echo "						fout2=g_strconcat(fout, \".svg\", NULL);"
echo "						if ((flags&PROC_POL)!=0) gtk_plot_polar_print_svg(plot3, fout2);"
echo "						else gtk_plot_linear_print_svg(plot3, fout2);"
echo "						g_free(fout2);"
echo "					}"
echo "				}"
echo "				else if (g_str_has_suffix(fout, \".png\"))"
echo "				{"
echo "					if ((flags&PROC_POL)!=0) gtk_plot_polar_print_png(plot3, fout);"
echo "					else gtk_plot_linear_print_png(plot3, fout);"
echo "				}"
echo "				else"
echo "				{"
echo "					fout2=g_strconcat(fout, \".png\", NULL);"
echo "					if ((flags&PROC_POL)!=0) gtk_plot_polar_print_png(plot3, fout2);"
echo "					else gtk_plot_linear_print_png(plot3, fout2);"
echo "					g_free(fout2);"
echo "				}"
echo "				g_free(fout);"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else if ((flags&PROC_TRS)!=0)"
echo "		{"
echo "${str_filt}"
echo "${str_pl2}"
echo "		}"
echo "		else if ((flags&PROC_OPN)!=0)"
echo "		{"
echo "${str_filt}"
echo "${str_pl1}"
echo "		}"
echo "		else"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "${str_ierr}"
echo "		}"
echo "		break;"
echo "		case 1:"
echo "		if ((flags&PROC_TRS)!=0)"
echo "		{"
echo "${str_filt}"
echo "${str_pl2}"
echo "		}"
echo "		else if ((flags&PROC_OPN)!=0)"
echo "		{"
echo "${str_filt}"
echo "${str_pl1}"
echo "		}"
echo "		else"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "${str_ierr}"
echo "		}"
echo "		break;"
echo "		default:"
echo "		if ((flags&PROC_OPN)!=0)"
echo "		{"
echo "${str_filt}"
echo "${str_pl1}"
echo "		}"
echo "		else"
echo "		{"
echo "${str_ierr}"
echo "		}"
echo "		break;"
echo "	}"
echo "}"
echo ""
echo "void sav(GtkWidget *widget, gpointer data)"
echo "{"
echo "	gchar *contents, *fout=NULL, *str, *str2;"
echo "	gchar s0[10], s1[10], s2[10], s3[10], s4[10];"
echo "	gdouble num, num2;"
echo "	GError *Err=NULL;"
echo "	gint dim, j, jdimx, k, st4, sz4;"
echo "	GtkPlot *pt;"
echo "	GtkPlotLinear *plt;"
echo "	GtkPlotPolar *plt2;"
echo "	GtkWidget *cont, *dialog, *label, *wfile;"
echo ""
echo "	switch (gtk_notebook_get_current_page(GTK_NOTEBOOK(notebook2)))"
echo "	{"
echo "		case 2:"
echo "		if ((flags&(PROC_CHP|PROC_BAT|PROC_PRS))==(PROC_CHP|PROC_BAT|PROC_PRS))"
echo "		{"
echo "${str_sch}"
echo "				pt=GTK_PLOT(plot3);"
echo "				sz4=g_array_index(pt->sizes, gint, 0);"
echo "				st4=g_array_index(pt->stride, gint, 0);"
echo "				if (kdimxf==1)"
echo "				{"
echo "					if (st4==1)"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Chirp\"), 3, _(\"All\"), 4, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 4:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p4}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l4}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tCHIRP    \"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=2*sz4; j<3*sz4; j++)"
echo "								{"
echo "${str_p2}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=2*sz4; j<3*sz4; j++)"
echo "								{"
echo "${str_l2}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_p2}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_l2}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p2}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l2}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "					else"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Chirp\"), 3, _(\"All\"), 4, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 4:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p4a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l4a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tCHIRP    \"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "				}"
echo "				else"
echo "				{"
echo "					jdimx=st4/kdimxf;"
echo "					if (jdimx==1)"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Chirp\"), 3, _(\"All\"), 4, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 4:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p4a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l4a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tCHIRP    \"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "					else"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\\nover J\"), 1, _(\"Domain Shift\\nover J\"), 2, _(\"Chirp\\nover J\"), 3, _(\"All\\nover J\"), 4, _(\"Visibility\\nover K\"), 5, _(\"Domain Shift\\nover K\"), 6, _(\"Chirp\\nover K\"), 7, _(\"All\\nover K\"), 8, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 8:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "${str_dupk}"
echo "							dim=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(jind));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "									g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+((j+sz4)*st4)));"
echo "									g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+((j+(2*sz4))*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);"
echo "									k=1;"
echo "									while (k<kdimxf)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k+(dim*kdimxf)+(j*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k+(dim*kdimxf)+((j+sz4)*st4)));"
echo "										g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (k++)+(dim*kdimxf)+((j+(2*sz4))*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "									g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+((j+sz4)*st4)));"
echo "									g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+((j+(2*sz4))*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);"
echo "									k=1;"
echo "									while (k<kdimxf)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k+(dim*kdimxf)+(j*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, k+(dim*kdimxf)+((j+sz4)*st4)));"
echo "										g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, (k++)+(dim*kdimxf)+((j+(2*sz4))*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 7:"
echo "							contents=g_strdup(_(\"MEAS     \\tCHIRP    \"));"
echo "${str_dupk}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=2*sz4; j<3*sz4; j++)"
echo "								{"
echo "${str_p2k}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=2*sz4; j<3*sz4; j++)"
echo "								{"
echo "${str_l2k}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 6:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupk}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_p2k}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_l2k}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 5:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupk}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p2k}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l2k}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 4:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "${str_dupj}"
echo "							dim=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(kind));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->thdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+((k+sz4)*st4)));"
echo "									g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+((k+(2*sz4))*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);"
echo "									k=1;"
echo "									while (j<jdimx)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(j*kdimxf)+(k*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(j*kdimxf)+((k+sz4)*st4)));"
echo "										g_snprintf(s4, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+((j++)*kdimxf)+((k+(2*sz4))*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->xdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+((k+sz4)*st4)));"
echo "									g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+((k+(2*sz4))*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);"
echo "									k=1;"
echo "									while (j<jdimx)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(j*kdimxf)+(k*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(j*kdimxf)+((k+sz4)*st4)));"
echo "										g_snprintf(s4, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+((j++)*kdimxf)+((k+(2*sz4))*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, s4, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tCHIRP    \"));"
echo "${str_dupj}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_p2j}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=2*sz4; k<3*sz4; k++)"
echo "								{"
echo "${str_l2j}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupj}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2j}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2j}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupj}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2j}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2j}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "				}"
echo "				{gtk_widget_destroy(dialog); g_free(fout);}"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else if ((flags&(PROC_BAT|PROC_PRS))==(PROC_BAT|PROC_PRS))"
echo "		{"
echo "${str_sch}"
echo "				pt=GTK_PLOT(plot3);"
echo "				sz4=g_array_index(pt->sizes, gint, 0);"
echo "				st4=g_array_index(pt->stride, gint, 0);"
echo "				if (kdimxf==1)"
echo "				{"
echo "					if (st4==1)"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Both\"), 3, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p3}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l3}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_p2}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_l2}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p2}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l2}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "					else"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Both\"), 3, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p3a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l3a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "				}"
echo "				else"
echo "				{"
echo "					jdimx=st4/kdimxf;"
echo "					if (jdimx==1)"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\"), 1, _(\"Domain Shift\"), 2, _(\"Both\"), 3, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p3a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l3a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupt}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2a}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2a}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "					else"
echo "					{"
echo "						dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Visibility\\nover J\"), 1, _(\"Domain Shift\\nover J\"), 2, _(\"Both\\nover J\"), 3, _(\"Visibility\\nover K\"), 4, _(\"Domain Shift\\nover K\"), 5, _(\"Both\\nover K\"), 6, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "						cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "						label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "						gtk_container_add(GTK_CONTAINER(cont), label);"
echo "						switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "						{"
echo "							case 6:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "${str_dupk}"
echo "							dim=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(jind));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "									g_snprintf(s1, 10, \"%f\", g_array_index(plt2->thdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (dim*kdimxf)+((j+sz4)*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "									k=1;"
echo "									while (k<kdimxf)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, k+(dim*kdimxf)+(j*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, (k++)+(dim*kdimxf)+((j+sz4)*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "									g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+(j*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (dim*kdimxf)+((j+sz4)*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "									k=1;"
echo "									while (k<kdimxf)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, k+(dim*kdimxf)+(j*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (k++)+(dim*kdimxf)+((j+sz4)*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 5:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupk}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_p2k}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=sz4; j<2*sz4; j++)"
echo "								{"
echo "${str_l2k}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 4:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupk}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_p2k}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (j=0; j<sz4; j++)"
echo "								{"
echo "${str_l2k}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 3:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "${str_dupj}"
echo "							dim=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(kind));"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->thdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+((k+sz4)*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "									k=1;"
echo "									while (j<jdimx)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+(j*kdimxf)+(k*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt2->rdata, gdouble, dim+((j++)*kdimxf)+((k+sz4)*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->xdata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(k*st4)));"
echo "									g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+((k+sz4)*st4)));"
echo "									str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "									k=1;"
echo "									while (j<jdimx)"
echo "									{"
echo "										g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+(j*kdimxf)+(k*st4)));"
echo "										g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, dim+((j++)*kdimxf)+((k+sz4)*st4)));"
echo "										str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "										g_free(str2);"
echo "										str2=g_strdup(str);"
echo "										g_free(str);"
echo "									}"
echo "									str=g_strdup(contents);"
echo "									g_free(contents);"
echo "									contents=g_strjoin(DLMT, str, str2, NULL);"
echo "									{g_free(str); g_free(str2);}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 2:"
echo "							contents=g_strdup(_(\"MEAS     \\tDOMN_SHFT\"));"
echo "${str_dupj}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_p2j}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=sz4; k<2*sz4; k++)"
echo "								{"
echo "${str_l2j}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							case 1:"
echo "							contents=g_strdup(_(\"MEAS     \\tVISIBILTY\"));"
echo "${str_dupj}"
echo "							if ((flags&PROC_POL)==PROC_POL)"
echo "							{"
echo "								plt2=GTK_PLOT_POLAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_p2j}"
echo "								}"
echo "							}"
echo "							else"
echo "							{"
echo "								plt=GTK_PLOT_LINEAR(plot3);"
echo "								for (k=0; k<sz4; k++)"
echo "								{"
echo "${str_l2j}"
echo "								}"
echo "							}"
echo "${str_sav}"
echo "							break;"
echo "							default:"
echo "							break;"
echo "						}"
echo "					}"
echo "				}"
echo "				{g_free(fout); gtk_widget_destroy(dialog);}"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else if ((flags&(PROC_CHP|PROC_PRS))==(PROC_CHP|PROC_PRS))"
echo "		{"
echo "${str_sch}"
echo "				if (kdimxf==1)"
echo "				{"
echo "					if ((vis->len)==1)"
echo "					{"
echo "						str=g_strdup(_(\"VISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "						g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, 0));"
echo "						g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, 0));"
echo "						g_snprintf(s4, 10, \"%f\", g_array_index(chp, gdouble, 0));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, s4, NULL);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "					else"
echo "					{"
echo "						contents=g_strdup(_(\"J        \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "						for (k=0; k<(vis->len); k++)"
echo "						{"
echo "${str_pc1}"
echo "						}"
echo "					}"
echo "				}"
echo "				else if ((vis->len)==kdimxf)"
echo "				{"
echo "					contents=g_strdup(_(\"K        \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "					for (k=0; k<kdimxf; k++)"
echo "					{"
echo "${str_pc1}"
echo "					}"
echo "				}"
echo "				else"
echo "				{"
echo "					jdimx=(vis->len)/kdimxf;"
echo "					contents=g_strdup(_(\"J        \\tK        \\tVISIBILTY\\tDOMN_SHFT\\tCHIRP    \"));"
echo "					for (j=0; j<jdimx; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%d\", j);"
echo "						for (k=0; k<kdimxf; k++)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%d\", k);"
echo "							g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, k+(j*kdimxf)));"
echo "							g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, k+(j*kdimxf)));"
echo "							g_snprintf(s4, 10, \"%f\", g_array_index(chp, gdouble, k+(j*kdimxf)));"
echo "							str2=g_strjoin(\"\\t\", s0, s1, s2, s3, s4, NULL);"
echo "							str=g_strdup(contents);"
echo "							g_free(contents);"
echo "							contents=g_strjoin(DLMT, str, str2, NULL);"
echo "							{g_free(str); g_free(str2);}"
echo "						}"
echo "					}"
echo "				}"
echo "${str_sav}"
echo "				g_free(fout);"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else if ((flags&PROC_PRS)!=0)"
echo "		{"
echo "${str_sch}"
echo "				if (kdimxf==1)"
echo "				{"
echo "					if ((vis->len)==1)"
echo "					{"
echo "						str=g_strdup(_(\"VISIBILTY\\tDOMN_SHFT\"));"
echo "						g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, 0));"
echo "						g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, 0));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "					else"
echo "					{"
echo "						contents=g_strdup(_(\"J        \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "						for (k=0; k<(vis->len); k++)"
echo "						{"
echo "${str_pn1}"
echo "						}"
echo "					}"
echo "				}"
echo "				else if ((vis->len)==kdimxf)"
echo "				{"
echo "					contents=g_strdup(_(\"K        \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "					for (k=0; k<kdimxf; k++)"
echo "					{"
echo "${str_pn1}"
echo "					}"
echo "				}"
echo "				else"
echo "				{"
echo "					jdimx=(vis->len)/kdimxf;"
echo "					contents=g_strdup(_(\"J        \\tK        \\tVISIBILTY\\tDOMN_SHFT\"));"
echo "					for (j=0; j<jdimx; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%d\", j);"
echo "						for (k=0; k<kdimxf; k++)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%d\", k);"
echo "							g_snprintf(s2, 10, \"%f\", g_array_index(vis, gdouble, k+(j*kdimxf)));"
echo "							g_snprintf(s3, 10, \"%f\", g_array_index(doms, gdouble, k+(j*kdimxf)));"
echo "							str2=g_strjoin(\"\\t\", s0, s1, s2, s3, NULL);"
echo "							str=g_strdup(contents);"
echo "							g_free(contents);"
echo "							contents=g_strjoin(DLMT, str, str2, NULL);"
echo "							{g_free(str); g_free(str2);}"
echo "						}"
echo "					}"
echo "				}"
echo "${str_sav}"
echo "				g_free(fout);"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else if ((flags&PROC_TRS)!=0)"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 1);"
echo "${str_sch}"
echo "				dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Real/Imaginary\"), 1, _(\"Magnitude/Phase\"), 2, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "				cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "				label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "				gtk_container_add(GTK_CONTAINER(cont), label);"
echo "				switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "				{"
echo "					case 2:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tMAGNITUDE\\tPHASE    \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*j));"
echo "						g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*j)+1));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					case 1:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tREAL_VAL \\tIMAG_VAL \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						num=g_array_index(plt->ydata, gdouble, 2*j);"
echo "						num2=g_array_index(plt->ydata, gdouble, (2*j)+1);"
echo "						g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "						g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							num=g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4)));"
echo "							num2=g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1);"
echo "							g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "							g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					default:"
echo "					break;"
echo "				}"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "${str_derr}"
echo "		}"
echo "		break;"
echo "		case 1:"
echo "		if ((flags&PROC_TRS)!=0)"
echo "		{"
echo "${str_sch}"
echo "				dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Real/Imaginary\"), 1, _(\"Magnitude/Phase\"), 2, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "				cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "				label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "				gtk_container_add(GTK_CONTAINER(cont), label);"
echo "				switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "				{"
echo "					case 2:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tMAGNITUDE\\tPHASE    \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*j));"
echo "						g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*j)+1));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					case 1:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tREAL_VAL \\tIMAG_VAL \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						num=g_array_index(plt->ydata, gdouble, 2*j);"
echo "						num2=g_array_index(plt->ydata, gdouble, (2*j)+1);"
echo "						g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "						g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							num=g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4)));"
echo "							num2=g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1);"
echo "							g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "							g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					default:"
echo "					break;"
echo "				}"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "${str_derr}"
echo "		}"
echo "		break;"
echo "		default:"
echo "		if ((flags&PROC_TRS)!=0)"
echo "		{"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 1);"
echo "${str_sch}"
echo "				dialog=gtk_dialog_new_with_buttons(_(\"Parameter selection\"), GTK_WINDOW(wfile), GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT, _(\"Real/Imaginary\"), 1, _(\"Magnitude/Phase\"), 2, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, NULL);"
echo "				cont=gtk_dialog_get_content_area(GTK_DIALOG (dialog));"
echo "				label=gtk_label_new(_(\"Select Parameter to save:\"));"
echo "				gtk_container_add(GTK_CONTAINER(cont), label);"
echo "				switch (gtk_dialog_run(GTK_DIALOG(dialog)))"
echo "				{"
echo "					case 2:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tMAGNITUDE\\tPHASE    \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*j));"
echo "						g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*j)+1));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s2, 10, \"%f\", g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4))));"
echo "							g_snprintf(s3, 10, \"%f\", g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					case 1:"
echo "					str2=g_strdup(_(\"INVERSE_D\\tREAL_VAL \\tIMAG_VAL \"));"
echo "${str_dup2}"
echo "					for (j=1; j<sz4; j++)"
echo "					{"
echo "						g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*j));"
echo "						num=g_array_index(plt->ydata, gdouble, 2*j);"
echo "						num2=g_array_index(plt->ydata, gdouble, (2*j)+1);"
echo "						g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "						g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "						str2=g_strjoin(\"\\t\", s1, s2, s3, NULL);"
echo "						k=1;"
echo "						while (k<jdimx)"
echo "						{"
echo "							g_snprintf(s1, 10, \"%f\", g_array_index(plt->xdata, gdouble, 2*(j+(k*sz4))));"
echo "							num=g_array_index(plt->ydata, gdouble, 2*(j+(k*sz4)));"
echo "							num2=g_array_index(plt->ydata, gdouble, (2*(j+((k++)*sz4)))+1);"
echo "							g_snprintf(s2, 10, \"%f\", num*cos(num2));"
echo "							g_snprintf(s3, 10, \"%f\", num*sin(num2));"
echo "							str=g_strjoin(\"\\t\", str2, s1, s2, s3, NULL);"
echo "							g_free(str2);"
echo "							str2=g_strdup(str);"
echo "							g_free(str);"
echo "						}"
echo "						str=g_strdup(contents);"
echo "						g_free(contents);"
echo "						contents=g_strjoin(DLMT, str, str2, NULL);"
echo "						{g_free(str); g_free(str2);}"
echo "					}"
echo "${str_sav}"
echo "					g_free(fout);"
echo "					break;"
echo "					default:"
echo "					break;"
echo "				}"
echo "			}"
echo "			gtk_widget_destroy(wfile);"
echo "		}"
echo "		else"
echo "		{"
echo "${str_derr}"
echo "		}"
echo "		break;"
echo "	}"
echo "}"
echo ""
echo "void sesssav(GtkWidget *widget, gpointer data)"
echo "{"
echo "	gchar *fout, *pdr, *str;"
echo "	GError *Err=NULL;"
echo "	gint fv;"
echo "	GKeyFile *key;"
echo "	gsize size;"
echo "	GSList *list;"
echo "	GtkPlot *pt;"
echo "	GtkPlotLinear *plt;"
echo ""
echo "	pdr=g_build_filename(g_get_user_config_dir(), PACKAGE, NULL);"
echo "	if (g_mkdir_with_parents (pdr, 0700) == 0)"
echo "	{"
echo "		key=g_key_file_new();"
echo "		list=group;"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Device\", \"RawDelimited\");"
echo "			goto bottomofcheck1a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Device\", \"JDSUSWS\");"
echo "			goto bottomofcheck1a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Device\", \"AndoOSA\");"
echo "			goto bottomofcheck1a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data))) g_key_file_set_string(key, \"MenuItems\", \"Device\", \"AgilentTL\");"
echo "		else g_key_file_set_string(key, \"MenuItems\", \"Device\", \"AgilentOSA\");"
echo "bottomofcheck1a:"
echo "		{fv=0; list=group2;}"
echo "		fv=g_slist_length(group2);"
echo "		g_key_file_set_integer(key, \"MenuItems\", \"Traces\", fv);"
echo "		while (list)"
echo "		{"
echo "			if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "			{"
echo "				g_key_file_set_integer(key, \"MenuItems\", \"Trace\", fv);"
echo "				break;"
echo "			}"
echo "			{list=(list->next); fv--;}"
echo "		}"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(group3->data))) g_key_file_set_string(key, \"MenuItems\", \"Compensation\", \"FirstOrder\");"
echo "		else g_key_file_set_string(key, \"MenuItems\", \"Compensation\", \"None\");"
echo "		list=group4;"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Basis\", \"Morlet\");"
echo "			goto bottomofcheck4a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Basis\", \"Meyer\");"
echo "			goto bottomofcheck4a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Basis\", \"Daubechies8\");"
echo "			goto bottomofcheck4a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data))) g_key_file_set_string(key, \"MenuItems\", \"Basis\", \"Daubechies4\");"
echo "		else g_key_file_set_string(key, \"MenuItems\", \"Basis\", \"Fourier\");"
echo "bottomofcheck4a:"
echo "		list=group5;"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data)))"
echo "		{"
echo "			g_key_file_set_string(key, \"MenuItems\", \"Complex\", \"RealImaginary\");"
echo "			goto bottomofcheck5a;"
echo "		}"
echo "		list=(list->next);"
echo "		if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(list->data))) g_key_file_set_string(key, \"MenuItems\", \"Complex\", \"MagnitudePhase\");"
echo "		else g_key_file_set_string(key, \"MenuItems\", \"Complex\", \"MagnitudeOnly\");"
echo "bottomofcheck5a:"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"Transmission\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(trans)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"Negated\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(neg)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"dBs\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(dBs)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"Wavenumber\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(twopionx)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"EdgeCorrection\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(wll)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"OptimisedTriangles\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(opttri)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"Chirp\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(chi)));"
echo "		g_key_file_set_boolean(key, \"MenuItems\", \"OffsetTracking\", gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(oft)));"
echo "		g_key_file_set_double(key, \"Params\", \"Offset\", gtk_spin_button_get_value(GTK_SPIN_BUTTON(fst)));"
echo "		g_key_file_set_integer(key, \"Params\", \"ZeroPadding\", gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(zpd)));"
echo "		g_key_file_set_integer(key, \"Params\", \"j\", gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(jind)));"
echo "		g_key_file_set_integer(key, \"Params\", \"k\", gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(kind)));"
echo "		g_key_file_set_integer(key, \"Param\", \"kMax\", kdimxf);"
echo "		g_key_file_set_string(key, \"Params\", \"DataFolder\", fold);"
echo "		g_key_file_set_string(key, \"Params\", \"ResultsFolder\", folr);"
echo "		plt=GTK_PLOT_LINEAR(plot1);"
echo "		pt=GTK_PLOT(plot1);"
echo "		str=g_strdup(plt->xlab);"
echo "		g_key_file_set_string(key, \"Plot\", \"SpectrumTextX\", str);"
echo "		g_free(str);"
echo "		str=g_strdup(plt->ylab);"
echo "		g_key_file_set_string(key, \"Plot\", \"SpectrumTextX\", str);"
echo "		g_free(str);"
echo "		str=pango_font_description_to_string(pt->lfont);"
echo "		g_key_file_set_string(key, \"Plot\", \"SpectrumLabel\", str);"
echo "		g_free(str);"
echo "		str=pango_font_description_to_string(pt->afont);"
echo "		g_key_file_set_string(key, \"Plot\", \"SpectrumAxis\", str);"
echo "		g_free(str);"
echo "		g_key_file_set_double(key, \"Plot\", \"SpectrumRed\", g_array_index((pt->rd), gdouble, 0));"
echo "		g_key_file_set_double(key, \"Plot\", \"SpectrumGreen\", g_array_index((pt->gr), gdouble, 0));"
echo "		g_key_file_set_double(key, \"Plot\", \"SpectrumBlue\", g_array_index((pt->bl), gdouble, 0));"
echo "		plt=GTK_PLOT_LINEAR(plot2);"
echo "		pt=GTK_PLOT(plot2);"
echo "		str=g_strdup(plt->xlab);"
echo "		g_key_file_set_string(key, \"Plot\", \"InverseSpectrumTextX\", str);"
echo "		g_free(str);"
echo "		str=g_strdup(plt->ylab);"
echo "		g_key_file_set_string(key, \"Plot\", \"InverseSpectrumTextX\", str);"
echo "		g_free(str);"
echo "		str=pango_font_description_to_string(pt->lfont);"
echo "		g_key_file_set_string(key, \"Plot\", \"InverseSpectrumLabel\", str);"
echo "		g_free(str);"
echo "		str=pango_font_description_to_string(pt->afont);"
echo "		g_key_file_set_string(key, \"Plot\", \"InverseSpectrumAxis\", str);"
echo "		g_free(str);"
echo "		str=g_key_file_to_data(key, &size, NULL);"
echo "		fout=g_build_filename(pdr, \"session.conf\", NULL);"
echo "		g_file_set_contents(fout, str, size, &Err);"
echo "		{g_free(str); g_free(fout); g_key_file_free(key);}"
echo "		if (Err)"
echo "		{"
echo "			str=g_strdup_printf(_(\"Error Saving file: %s.\"), (Err->message));"
echo "			gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "			{g_free(str); g_error_free(Err);}"
echo "		}"
echo "	}"
echo "	else"
echo "	{"
echo "		str=g_strdup(_(\"Error Creating config directory.\"));"
echo "		gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "		g_free(str);"
echo "	}"
echo "	g_free(pdr);"
echo "}"
echo ""
echo "void sessres(GtkWidget *widget, gpointer data)"
echo "{"
echo "	GArray *caa, *cab, *cag, *car;"
echo "	gchar *str, *str2, *fout;"
echo "	gchar s[5];"
echo "	gdouble mny, mxy, val, xf, xi;"
echo "	GError *Err=NULL;"
echo "	gint j, k;"
echo "	GKeyFile *key;"
echo "	GSList *list;"
echo "	GtkPlot *pt;"
echo "	GtkPlotLinear *plt;"
echo "	GtkWidget *mni;"
echo "	PangoFontDescription *ds1, *ds2;"
echo ""
echo "	key=g_key_file_new();"
echo "	fout=g_build_filename(g_get_user_config_dir(), PACKAGE, \"session.conf\", NULL);"
echo "	if (g_key_file_load_from_file(key, fout, G_KEY_FILE_KEEP_COMMENTS|G_KEY_FILE_KEEP_TRANSLATIONS, &Err))"
echo "	{"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Device\", &Err))"
echo "		{"
echo "			str=g_key_file_get_string(key, \"MenuItems\", \"Device\", &Err);"
echo "			list=group;"
echo "			if (!g_strcmp0(str, \"RawDelimited\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck1b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"JDSUSWS\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck1b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"AndoOSA\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck1b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"AgilentTL\")) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			else if (!g_strcmp0(str, \"AgilentOSA\"))"
echo "			{"
echo "				list=list->next;"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			}"
echo "bottomofcheck1b:"
echo "			g_free(str);"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Traces\", &Err))"
echo "		{"
echo "			k=g_key_file_get_integer(key, \"MenuItems\", \"Traces\", &Err);"
echo "			j=g_slist_length(group2);"
echo "			while (j<k)"
echo "			{"
echo "				g_snprintf(s, 4, \"%d\", (++j));"
echo "				mni=gtk_radio_menu_item_new_with_label(group2, s);"
echo "				group2=gtk_radio_menu_item_get_group(GTK_RADIO_MENU_ITEM(mni));"
echo "				g_signal_connect(G_OBJECT(mni), \"toggled\", G_CALLBACK(upg), NULL);"
echo "				gtk_menu_shell_append(GTK_MENU_SHELL(tracmenu), mni);"
echo "				gtk_widget_show(mni);"
echo "			}"
echo "			while (j>k)"
echo "			{"
echo "				list=(group2->next);"
echo "				gtk_widget_destroy(group2->data);"
echo "				group2=list;"
echo "				j--;"
echo "			}"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Trace\", &Err))"
echo "		{"
echo "			j=g_key_file_get_integer(key, \"MenuItems\", \"Trace\", &Err);"
echo "			if (j>=g_slist_length(group2)) j=0;"
echo "			else j=g_slist_length(group2)-j;"
echo "			list=group2;"
echo "			while (j>0) {list=list->next; j--;}"
echo "			gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Compensation\", &Err))"
echo "		{"
echo "			str=g_key_file_get_string(key, \"MenuItems\", \"Compensation\", &Err);"
echo "			if (!g_strcmp0(str, \"FirstOrder\")) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(group3->data), TRUE);"
echo "			else" 
echo "			{"
echo "				list=group3->next;"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			}"
echo "			g_free(str);"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Basis\", &Err))"
echo "		{"
echo "			str=g_key_file_get_string(key, \"MenuItems\", \"Basis\", &Err);"
echo "			list=group4;"
echo "			if (!g_strcmp0(str, \"Morlet\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck4b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"Meyer\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck4b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"Daubechies8\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck4b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"Daubechies4\")) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			else if (!g_strcmp0(str, \"Fourier\"))"
echo "			{"
echo "				list=list->next;"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			}"
echo "bottomofcheck4b:"
echo "			g_free(str);"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Complex\", &Err))"
echo "		{"
echo "			str=g_key_file_get_string(key, \"MenuItems\", \"Complex\", &Err);"
echo "			list=group5;"
echo "			if (!g_strcmp0(str, \"RealImaginary\"))"
echo "			{"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "				goto bottomofcheck5b;"
echo "			}"
echo "			else list=list->next;"
echo "			if (!g_strcmp0(str, \"MagnitudePhase\")) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			else if (!g_strcmp0(str, \"MagnitudeOnly\"))"
echo "			{"
echo "				list=list->next;"
echo "				gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(list->data), TRUE);"
echo "			}"
echo "bottomofcheck5b:"
echo "			g_free(str);"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Transmission\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(trans), g_key_file_get_boolean(key, \"MenuItems\", \"Transmission\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Negated\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(neg), g_key_file_get_boolean(key, \"MenuItems\", \"Negated\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"dBs\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(dBs), g_key_file_get_boolean(key, \"MenuItems\", \"dBs\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Wavenumber\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(twopionx), g_key_file_get_boolean(key, \"MenuItems\", \"Wavenumber\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"EdgeCorrection\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(wll), g_key_file_get_boolean(key, \"MenuItems\", \"EdgeCorrection\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"OptimisedTriangles\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(opttri), g_key_file_get_boolean(key, \"MenuItems\", \"OptimisedTriangles\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"Chirp\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(chi), g_key_file_get_boolean(key, \"MenuItems\", \"Chirp\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"MenuItems\", \"OffsetTracking\", &Err)) gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(oft), g_key_file_get_boolean(key, \"MenuItems\", \"OffsetTracking\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"Params\", \"Offset\", &Err)) gtk_spin_button_set_value(GTK_SPIN_BUTTON(fst), g_key_file_get_double(key, \"Params\", \"Offset\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"Params\", \"ZeroPadding\", &Err)) gtk_spin_button_set_value(GTK_SPIN_BUTTON(zpd), g_key_file_get_integer(key, \"Params\", \"ZeroPadding\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		/*if (g_key_file_has_key(key, \"Params\", \"j\", &Err)) gtk_spin_button_set_value(GTK_SPIN_BUTTON(jind), g_key_file_get_integer(key, \"Params\", \"j\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"Params\", \"k\", &Err)) gtk_spin_button_set_value(GTK_SPIN_BUTTON(kind), g_key_file_get_integer(key, \"Params\", \"k\", &Err));"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"Params\", \"kMax\", &Err)) kdimxf=g_key_file_get_integer(key, \"Params\", \"kdimxf\", &Err);"
echo "		else if (Err) g_error_free(Err);*/"
echo "		if (g_key_file_has_key(key, \"Params\", \"DataFolder\", &Err))"
echo "		{"
echo "			g_free(fold);"
echo "			fold=g_strdup(g_key_file_get_string(key, \"Params\", \"DataFolder\", &Err));"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		if (g_key_file_has_key(key, \"Params\", \"ResultsFolder\", &Err))"
echo "		{"
echo "			g_free(folr);"
echo "			folr=g_strdup(g_key_file_get_string(key, \"Params\", \"ResultsFolder\", &Err));"
echo "		}"
echo "		else if (Err) g_error_free(Err);"
echo "		plt=GTK_PLOT_LINEAR(plot1);"
echo "		pt=GTK_PLOT(plot1);"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumTextX\", &Err)) str=g_key_file_get_string(key, \"Plot\", \"SpectrumTextX\", &Err);"
echo "		else"
echo "		{"
echo "			str=g_strdup(plt->xlab);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumTextY\", &Err)) str2=g_key_file_get_string(key, \"Plot\", \"SpectrumTextY\", &Err);"
echo "		else"
echo "		{"
echo "			str2=g_strdup(plt->ylab);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		gtk_plot_linear_set_label(plt, str, str2);"
echo "		{g_free(str); g_free(str2);}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumLabel\", &Err)) ds1=pango_font_description_from_string(g_key_file_get_string(key, \"Plot\", \"SpectrumLabel\", &Err));"
echo "		else"
echo "		{"
echo "			ds1=pango_font_description_copy(pt->lfont);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumAxis\", &Err)) ds2=pango_font_description_from_string(g_key_file_get_string(key, \"Plot\", \"SpectrumAxis\", &Err));"
echo "		else"
echo "		{"
echo "			ds2=pango_font_description_copy(pt->afont);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		gtk_plot_set_font(pt, ds1, ds2);"
echo "		{pango_font_description_free(ds1); pango_font_description_free(ds2);}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumRed\", &Err)) val=g_key_file_get_double(key, \"Plot\", \"SpectrumRed\", &Err);"
echo "		else"
echo "		{"
echo "			val=g_array_index((pt->rd), gdouble, 0);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		car=g_array_sized_new(FALSE, FALSE, sizeof(gdouble), 1);"
echo "		g_array_append_val(car, val);"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumGreen\", &Err)) val=g_key_file_get_double(key, \"Plot\", \"SpectrumGreen\", &Err);"
echo "		else"
echo "		{"
echo "			val=g_array_index((pt->gr), gdouble, 0);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		cag=g_array_sized_new(FALSE, FALSE, sizeof(gdouble), 1);"
echo "		g_array_append_val(cag, val);"
echo "		if (g_key_file_has_key(key, \"Plot\", \"SpectrumBlue\", &Err)) val=g_key_file_get_double(key, \"Plot\", \"SpectrumBlue\", &Err);"
echo "		else"
echo "		{"
echo "			val=g_array_index((pt->bl), gdouble, 0);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		cab=g_array_sized_new(FALSE, FALSE, sizeof(gdouble), 1);"
echo "		g_array_append_val(cab, val);"
echo "		val=1;"
echo "		caa=g_array_sized_new(FALSE, FALSE, sizeof(gdouble), 1);"
echo "		g_array_append_val(caa, val);"
echo "		gtk_plot_set_colour(pt, car, cag, cab, caa);"
echo "		{g_array_unref(car); g_array_unref(cag); g_array_unref(cab); g_array_unref(caa);}"
echo "		g_object_get(G_OBJECT(plot1), \"xmin\", &xi, \"xmax\", &xf, \"ymin\", &mny, \"ymax\", &mxy, NULL);"
echo "		gtk_plot_linear_update_scale(plot1, xi, xf, mny, mxy);"
echo "		plt=GTK_PLOT_LINEAR(plot2);"
echo "		pt=GTK_PLOT(plot2);"
echo "		if (g_key_file_has_key(key, \"Plot\", \"InverseSpectrumTextX\", &Err)) str=g_key_file_get_string(key, \"Plot\", \"InverseSpectrumTextX\", &Err);"
echo "		else"
echo "		{"
echo "			str=g_strdup(plt->xlab);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"InverseSpectrumTextY\", &Err)) str2=g_key_file_get_string(key, \"Plot\", \"InverseSpectrumTextY\", &Err);"
echo "		else"
echo "		{"
echo "			str2=g_strdup(plt->ylab);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		gtk_plot_linear_set_label(plt, str, str2);"
echo "		{g_free(str); g_free(str2);}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"InverseSpectrumLabel\", &Err)) ds1=pango_font_description_from_string(g_key_file_get_string(key, \"Plot\", \"InverseSpectrumLabel\", &Err));"
echo "		else"
echo "		{"
echo "			ds1=pango_font_description_copy(pt->lfont);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		if (g_key_file_has_key(key, \"Plot\", \"InverseSpectrumAxis\", &Err)) ds2=pango_font_description_from_string(g_key_file_get_string(key, \"Plot\", \"InverseSpectrumAxis\", &Err));"
echo "		else"
echo "		{"
echo "			ds2=pango_font_description_copy(pt->afont);"
echo "			if (Err) g_error_free(Err);"
echo "		}"
echo "		gtk_plot_set_font(pt, ds1, ds2);"
echo "		{pango_font_description_free(ds1); pango_font_description_free(ds2);}"
echo "		g_object_get(G_OBJECT(plot2), \"xmin\", &xi, \"xmax\", &xf, \"ymin\", &mny, \"ymax\", &mxy, NULL);"
echo "		gtk_plot_linear_update_scale(plot2, xi, xf, mny, mxy);"
echo "		g_key_file_free(key);"
echo "	}"
echo "	else"
echo "	{"
echo "		str=g_strdup_printf(_(\"Loading failed for file: %s, Error: %s.\"), fout, (Err->message));"
echo "		gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "		{g_free(str); g_error_free(Err);}"
echo "	}"
echo "	g_free(fout);"
echo "}"
echo ""
echo "void opd(GtkWidget *widget, gpointer data)"
echo "{"
echo "	GArray *nx, *st, *sz, *x, *y;"
echo "	gchar *contents=NULL, *dm, *fin=NULL, *str;"
echo "	gchar **strat=NULL, **strary=NULL;"
echo "	gchar s[5];"
echo "	gdouble lcl, mny, mxy, xf, xi;"
echo "	GError *Err=NULL;"
echo "	gint j, k, l, lc, sal, satl, zp;"
echo "	GSList *list;"
echo "	GtkPlot *pt;"
echo "	GtkPlotLinear *plt;"
echo "	GtkWidget *label, *mni, *wfile;"
echo ""
echo "	wfile=gtk_file_chooser_dialog_new(_(\"Select Data File\"), GTK_WINDOW(window), GTK_FILE_CHOOSER_ACTION_OPEN, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL, GTK_STOCK_OPEN, GTK_RESPONSE_ACCEPT, NULL);"
echo "	gtk_file_chooser_set_select_multiple(GTK_FILE_CHOOSER(wfile), FALSE);"
echo "	gtk_file_chooser_set_show_hidden(GTK_FILE_CHOOSER(wfile), FALSE);"
echo "	gtk_file_chooser_set_current_folder(GTK_FILE_CHOOSER(wfile), fold);"
echo "	g_signal_connect(G_OBJECT(wfile), \"destroy\", G_CALLBACK(gtk_widget_destroy), G_OBJECT(wfile));"
echo "	if (gtk_dialog_run(GTK_DIALOG(wfile))==GTK_RESPONSE_ACCEPT)"
echo "	{"
echo "		{g_free(fold); g_free(folr);}"
echo "		fold=gtk_file_chooser_get_current_folder(GTK_FILE_CHOOSER(wfile));"
echo "		folr=g_strdup(fold);"
echo "		fin=gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(wfile));"
echo "		if (g_file_get_contents(fin, &contents, NULL, &Err))"
echo "		{"
echo "			strary=g_strsplit_set(contents, \"\\r\\n\", 0);"
echo "			sal=g_strv_length(strary);"
echo "			if ((flags&PROC_BAT)!=0)"
echo "			{"
echo "				gtk_notebook_remove_page(GTK_NOTEBOOK(notebook2), 2);"
echo "				rest=gtk_table_new(4, 2, FALSE);"
echo "				gtk_widget_show(rest);"
echo "				label=gtk_label_new(_(\"Visibility\"));"
echo "				gtk_table_attach(GTK_TABLE(rest), label, 0, 1, 0, 1, GTK_FILL|GTK_SHRINK|GTK_EXPAND, GTK_FILL|GTK_SHRINK|GTK_EXPAND, 2, 2);"
echo "				gtk_widget_show(label);"
echo "				visl=gtk_label_new(\"\");"
echo "				gtk_table_attach(GTK_TABLE(rest), visl, 0, 1, 1, 2, GTK_FILL|GTK_SHRINK|GTK_EXPAND, GTK_FILL|GTK_SHRINK|GTK_EXPAND, 2, 2);"
echo "				gtk_widget_show(visl);"
echo "				label=gtk_label_new(_(\"Domain Shift\"));"
echo "				gtk_table_attach(GTK_TABLE(rest), label, 1, 2, 0, 1, GTK_FILL|GTK_SHRINK|GTK_EXPAND, GTK_FILL|GTK_SHRINK|GTK_EXPAND, 2, 2);"
echo "				gtk_widget_show(label);"
echo "				dsl=gtk_label_new(\"\");"
echo "				gtk_table_attach(GTK_TABLE(rest), dsl, 1, 2, 1, 2, GTK_FILL|GTK_SHRINK|GTK_EXPAND, GTK_FILL|GTK_SHRINK|GTK_EXPAND, 2, 2);"
echo "				gtk_widget_show(dsl);"
echo "				label=gtk_label_new(_(\"Analysis Results\"));"
echo "				gtk_notebook_append_page(GTK_NOTEBOOK(notebook2), rest, label);"
echo "				flags^=PROC_BAT;"
echo "			}"
echo "			flags|=PROC_OPN;"
echo "			{x=g_array_new(FALSE, FALSE, sizeof(gdouble)); y=g_array_new(FALSE, FALSE, sizeof(gdouble));}"
echo "			if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(anosa))) {k=2; lc=-1; dm=\",\";}"
echo "			else if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(sws))) {k=0; lc=-1; dm=\"\\t\";}"
echo "			else {k=0; lc=0; dm=\"\\t\";}"
echo "			if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(mg)))"
echo "			{"
echo "				while (k<sal)"
echo "				{"
echo "					if (!strary[k]) {k++; continue;}"
echo "					g_strchug(strary[k]);"
echo "					if (!g_strcmp0(\"\", strary[k])) {k++; continue;}"
echo "					if (!(g_ascii_isdigit(strary[k][0])|(g_str_has_prefix(strary[k],\"-\")))) {k++; continue;}"
echo "					if (lc<0) {lc++; k++; continue;}"
echo "					strat=g_strsplit_set(strary[k], dm, 0);"
echo "					xf=g_ascii_strtod(g_strstrip(strat[0]), NULL);"
echo "					g_array_append_val(x, xf);"
echo "					if (lc==0)"
echo "					{"
echo "						satl=g_strv_length(strat);"
echo "						if (!strat[1]) lcl=0;"
echo "						else lcl=g_ascii_strtod(g_strstrip(strat[1]), NULL);"
echo "						{mny=lcl; mxy=lcl;}"
echo "					}"
echo "					else"
echo "					{"
echo "						if (!strat[1]) lcl=0;"
echo "						else lcl=g_ascii_strtod(g_strstrip(strat[1]), NULL);"
echo "						if (lcl<mny) mny=lcl;"
echo "						else if (lcl>mxy) mxy=lcl;"
echo "					}"
echo "					g_array_append_val(y, lcl);"
echo "					for (l=2; l<satl; l++)"
echo "					{"
echo "						g_array_append_val(x, xf);"
echo "						if (!strat[l]) lcl=0;"
echo "						else lcl=g_ascii_strtod(g_strstrip(strat[l]), NULL);"
echo "						g_array_append_val(y, lcl);"
echo "					}"
echo "					g_strfreev(strat);"
echo "					{lc++; k++;}"
echo "				}"
echo "				g_strfreev(strary);"
echo "				satl--;"
echo "				j=g_slist_length(group2);"
echo "				while (j<satl)"
echo "				{"
echo "					g_snprintf(s, 4, \"%d\", (++j));"
echo "					mni=gtk_radio_menu_item_new_with_label(group2, s);"
echo "					group2=gtk_radio_menu_item_get_group(GTK_RADIO_MENU_ITEM(mni));"
echo "					g_signal_connect(G_OBJECT(mni), \"toggled\", G_CALLBACK(upg), NULL);"
echo "					gtk_menu_shell_append(GTK_MENU_SHELL(tracmenu), mni);"
echo "					gtk_widget_show(mni);"
echo "				}"
echo "				while (j>satl)"
echo "				{"
echo "					list=(group2->next);"
echo "					gtk_widget_destroy(group2->data);"
echo "					group2=list;"
echo "					j--;"
echo "				}"
echo "				str=g_strdup_printf(_(\"File: %s successfully loaded.\"), fin);"
echo "				gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "				g_free(str);"
echo "				plt=GTK_PLOT_LINEAR(plot1);"
echo "				{xi=g_array_index(x, gdouble, 0); xf=g_array_index(x, gdouble, (lc*satl)-1);}"
echo "				{st=g_array_sized_new(FALSE, FALSE, sizeof(gint), 1); sz=g_array_sized_new(FALSE, FALSE, sizeof(gint), 1); nx=g_array_sized_new(FALSE, FALSE, sizeof(gint), 1);}"
echo "				g_array_append_val(st, satl);"
echo "				g_array_append_val(sz, lc);/* adjust if multiple traces desired */"
echo "				zp=0;"
echo "				g_array_append_val(nx, zp);"
echo "				gtk_plot_linear_set_data(plt, x, y, nx, sz, st);"
echo "				{g_array_unref(x); g_array_unref(y); g_array_unref(nx); g_array_unref(sz); g_array_unref(st);}"
echo "				gtk_plot_linear_update_scale_pretty(plot1, xi, xf, mny, mxy);"
echo "				flags&=(PROC_OPN|PROC_TRS|PROC_PRS|PROC_CHP|PROC_OFT|PROC_POL);"
echo "			}"
echo "			else"
echo "			{"
echo "				str=g_strdup(\"Complex data not yet supported.\");"
echo "				gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "				g_free(str);"
echo "				flags|=PROC_COM;"
echo "				if (gtk_check_menu_item_get_active(GTK_CHECK_MENU_ITEM(ri))) flags|=PROC_RI;"
echo "				else flags&=(PROC_OPN|PROC_TRS|PROC_PRS|PROC_CHP|PROC_OFT|PROC_POL|PROC_COM);"
echo "			}"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook), 0);"
echo "			gtk_notebook_set_current_page(GTK_NOTEBOOK(notebook2), 0);"
echo "		}"
echo "		else"
echo "		{"
echo "			str=g_strdup_printf(_(\"Loading failed for file: %s, Error: %s.\"), fin, (gchar*) Err);"
echo "			gtk_statusbar_push(GTK_STATUSBAR(statusbar), gtk_statusbar_get_context_id(GTK_STATUSBAR(statusbar), str), str);"
echo "			{g_free(str); g_error_free(Err);}"
echo "		}"
echo "		{g_free(contents); g_free(fin);}"
echo "	}"
echo "	gtk_widget_destroy(wfile);"
echo "}"
} >src/data.c
